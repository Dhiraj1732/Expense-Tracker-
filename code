import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

class Expense {
    String category;
    double amount;

    public Expense(String category, double amount) {
        this.category = category;
        this.amount = amount;
    }
}

public class ExpenseTrackerApp extends JFrame {

    private List<Expense> expenses = new ArrayList<>();

    private JTextField categoryField;
    private JTextField amountField;
    private JTextArea expenseTextArea;

    public ExpenseTrackerApp() {
        setTitle("Expense Tracker");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        initComponents();
    }

    private void initComponents() {
        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(4, 2));

        JLabel categoryLabel = new JLabel("Category:");
        categoryField = new JTextField();
        JLabel amountLabel = new JLabel("Amount:");
        amountField = new JTextField();

        JButton logExpenseButton = new JButton("Log Expense");
        logExpenseButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                logExpense();
            }
        });

        expenseTextArea = new JTextArea();
        expenseTextArea.setEditable(false);

        panel.add(categoryLabel);
        panel.add(categoryField);
        panel.add(amountLabel);
        panel.add(amountField);
        panel.add(logExpenseButton);

        add(panel, BorderLayout.NORTH);
        add(new JScrollPane(expenseTextArea), BorderLayout.CENTER);
    }

    private void logExpense() {
        String category = categoryField.getText();
        double amount;

        try {
            amount = Double.parseDouble(amountField.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid amount. Please enter a numeric value.");
            return;
        }

        Expense expense = new Expense(category, amount);
        expenses.add(expense);

        updateExpenseTextArea();
        clearFields();
    }

    private void updateExpenseTextArea() {
        StringBuilder sb = new StringBuilder();
        for (Expense expense : expenses) {
            sb.append("Category: ").append(expense.category).append(", Amount: $").append(expense.amount).append("\n");
        }
        expenseTextArea.setText(sb.toString());
    }

    private void clearFields() {
        categoryField.setText("");
        amountField.setText("");
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ExpenseTrackerApp().setVisible(true);
            }
        });
    }
}
